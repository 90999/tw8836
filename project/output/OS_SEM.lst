C51 COMPILER V9.51   OS_SEM                                                                07/19/2013 23:42:42 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE OS_SEM
OBJECT MODULE PLACED IN .\output\OS_SEM.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE os\OS_SEM.C LARGE OPTIMIZE(7,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\outpu
                    -t\OS_SEM.lst) TABS(2) OBJECT(.\output\OS_SEM.obj)

line level    source

   1          /*********************************************************************************************************
   2          **                                       Small RTOS(51)
   3          **                                   The Real-Time Kernel(For Keil c51)
   4          **
   5          **                                  (c) Copyright 2002-2003, chenmingji
   6          **                                           All Rights Reserved
   7          **
   8          **                                                  V1.20.0
   9          **
  10          **
  11          **--------------文件信息--------------------------------------------------------------------------------
  12          **文   件   名: OS_Q.C
  13          **创   建   人: 陈明计
  14          **最后修改日期:  2003年8月3日
  15          **描        述: Small RTOS(51)信号量代码
  16          **
  17          **--------------历史版本信息----------------------------------------------------------------------------
  18          ** 创建人: 陈明计
  19          ** 版  本: V1.10~V1.12.0
  20          ** 日　期: 2002年9月1日~2002年12月30日
  21          ** 描　述: 完善信号量代码
  22          **
  23          **------------------------------------------------------------------------------------------------------
  24          ** 修改人: 陈明计
  25          ** 版  本: V1.20.0
  26          ** 日　期: 2003年8月3日
  27          ** 描　述: 删除OSInt*函数，根据新版本要求改变一些代码
  28          **
  29          **--------------当前版本修订----------------------------------------------------------------------------
  30          ** 修改人:
  31          ** 日　期:
  32          ** 描　述:
  33          **
  34          **------------------------------------------------------------------------------------------------------
  35          ********************************************************************************************************/
  36          
  37          #define  IN_OS_SEM
  38          #include "config.h"
  39          
  40                         /* 分配信号量存储空间 */
  41          #if EN_OS_SEM > 0
  42          #if OS_MAX_TASKS < 9
  43          uint8 OS_SEM_MEM_SEL OsSemBuf[OS_MAX_SEMS * 2];
  44          #else
              uint8 OS_SEM_MEM_SEL OsSemBuf[OS_MAX_SEMS * 3];
              #endif
  47          
  48          
  49          
  50          /*********************************************************************************************************
  51          ** 函数名称: OSSemCreate
  52          ** 功能描述: 初始化消息队列
  53          ** 输　入: Index:信号量索引
  54          **         data:信号量初始值
C51 COMPILER V9.51   OS_SEM                                                                07/19/2013 23:42:42 PAGE 2   

  55          ** 输　出: NOT_OK:没有这个信号量
  56          **         OS_SEM_OK:成功
  57          ** 全局变量: 无
  58          ** 调用模块: 无
  59          **
  60          ** 作　者: 陈明计
  61          ** 日　期: 2002年9月1日
  62          **-------------------------------------------------------------------------------------------------------
  63          ** 修改人:
  64          ** 日　期:
  65          **-------------------------------------------------------------------------------------------------------
  66          ********************************************************************************************************/
  67          
  68                  uint8 OSSemCreate(uint8 Index,uint8 Data)
  69          {
  70   1          OS_ENTER_CRITICAL();
  71   1          if (Index < OS_MAX_SEMS )
  72   1          {
  73   2      #if OS_MAX_TASKS < 9
  74   2              OsSemBuf[2 * Index] = Data;             /* 计数器置初值 */
  75   2              OsSemBuf[2 * Index + 1] = 0;            /* 清空等待队列 */
  76   2      #else
                      OsSemBuf[3 * Index] = Data;             /* 计数器置初值 */
                              /* 清空等待队列 */
                      OsSemBuf[3 * Index + 1] = 0;
                      OsSemBuf[3 * Index + 2] = 0;
              #endif
  82   2              OS_EXIT_CRITICAL();
  83   2              return OS_SEM_OK;
  84   2          }
  85   1          OS_EXIT_CRITICAL();
  86   1          return NOT_OK;
  87   1      }
  88          
  89          /*********************************************************************************************************
  90          ** 函数名称: OSSemPend
  91          ** 功能描述: 等待一个信号量
  92          ** 输　入: Index:信号量索引
  93          **         Tick:等待时间
  94          ** 输　出: NOT_OK:参数错误
  95          **         OS_SEM_OK:得到信号量
  96          **         OS_SEM_TMO:超时到
  97          **         OS_SEM_NOT_OK:没有得到信号量
  98          ** 全局变量: 无
  99          ** 调用模块: OSRunningTaskID,OS_TaskSuspend,OSSched,OS_ENTER_CRITICAL,OS_EXIT_CRITICAL
 100          **
 101          ** 作　者: 陈明计
 102          ** 日　期: 2002年9月1日
 103          **-------------------------------------------------------------------------------------------------------
 104          ** 修改人: 陈明计
 105          ** 日　期: 2002年10月20日
 106          **-------------------------------------------------------------------------------------------------------
 107          ** 修改人: 陈明计
 108          ** 日　期: 2002年10月26日
 109          **-------------------------------------------------------------------------------------------------------
 110          ** 修改人: 陈明计
 111          ** 日　期: 2002年12月2日
 112          **-------------------------------------------------------------------------------------------------------
 113          ** 修改人: 陈明计
 114          ** 日　期: 2002年12月30日
 115          **-------------------------------------------------------------------------------------------------------
 116          ** 修改人:
C51 COMPILER V9.51   OS_SEM                                                                07/19/2013 23:42:42 PAGE 3   

 117          ** 日　期:
 118          **-------------------------------------------------------------------------------------------------------
 119          ********************************************************************************************************/
 120          #if EN_OS_SEM_PENT > 0
 121          
 122                  uint8 OSSemPend(uint8 Index, uint8 Tick)
 123          {
 124   1      #if EN_OS_SEM_CHK > 0
                  if (Index >= OS_MAX_SEMS)
                  {
                      return 0;
                  }
              #endif
 130   1      
 131   1          OS_ENTER_CRITICAL();
 132   1      
 133   1          OSWaitTick[OSRunningTaskID()] = Tick;       /* 设置超时时间         */
 134   1                                                      /* 可以优化寄存器的使用  */
 135   1                      /* 把任务加入等待任务队列 */
 136   1      #if OS_MAX_TASKS < 9
 137   1          OsSemBuf[Index * 2 + 1] |= OSMapTbl[OSRunningTaskID()];
 138   1      #else
                  if (OSRunningTaskID() < 8)
                  {
                      OsSemBuf[Index * 3 + 1] |= OSMapTbl[OSRunningTaskID()];
                  }
                  else
                  {
                      OsSemBuf[Index * 3 + 2] |= OSMapTbl[OSRunningTaskID() & 0x07];
                  }
              #endif
 148   1                      /* 信号量是否有效 */
 149   1      #if OS_MAX_TASKS < 9
 150   1          while (OsSemBuf[Index * 2] == 0)
 151   1          {
 152   2      #else
                  while (OsSemBuf[Index * 3] == 0)
                  {
              #endif
 156   2                      /* 使用堆栈是为了使函数具有重入性 */
 157   2      #ifdef __C51__
 158   2              SP++;
 159   2              *((uint8 data *)SP) = Index;
 160   2      #endif
 161   2                  /* 信号量无效 */
 162   2              OS_TaskSuspend(OSRunningTaskID());   /* 任务进入等待状态 */
 163   2              OSSched();                          /* 运行下一个任务 */
 164   2      
 165   2      #ifdef __C51__
 166   2              Index = *((uint8 data *)SP);
 167   2              SP--;
 168   2      #endif
 169   2                   /* 任务再次运行，如果超时到，退出循环 */
 170   2              if (OSWaitTick[OSRunningTaskID()] == 0)
 171   2              {
 172   3                  break;
 173   3              }
 174   2          }
 175   1      
 176   1                  /* 将任务从等待队列中清除（可以删除） */
 177   1      #if OS_MAX_TASKS < 9
 178   1          OsSemBuf[Index * 2 + 1] &= ~OSMapTbl[OSRunningTaskID()];
C51 COMPILER V9.51   OS_SEM                                                                07/19/2013 23:42:42 PAGE 4   

 179   1      #else
                  if (OSRunningTaskID() < 8)
                  {
                      OsSemBuf[Index * 3 + 1] &= ~OSMapTbl[OSRunningTaskID()];
                  }
                  else
                  {
                      OsSemBuf[Index * 3 + 2] &= ~OSMapTbl[OSRunningTaskID() & 0x07];
                  }
              #endif
 189   1                  /* 判断信号量是否有效。有效，信号量计数器减一 */
 190   1      #if OS_MAX_TASKS < 9
 191   1          if (OsSemBuf[Index * 2] > 0)
 192   1          {
 193   2              OsSemBuf[Index * 2]--;
 194   2      #else
                  if (OsSemBuf[Index * 3] > 0)
                  {
                      OsSemBuf[Index * 3]--;
              #endif
 199   2              OS_EXIT_CRITICAL();
 200   2              return OS_SEM_OK;
 201   2          }
 202   1          else
 203   1          {
 204   2              /* 无信号返回信号无效 */
 205   2              OS_EXIT_CRITICAL();
 206   2              return OS_SEM_TMO;
 207   2          }
 208   1      }
 209          #endif
 210          
 211          /*********************************************************************************************************
 212          ** 函数名称: OSSemAccept
 213          ** 功能描述: 无等待请求信号量
 214          ** 输　入: Index:信号量索引
 215          ** 输　出: NOT_OK:参数错误
 216          **         OS_SEM_OK:得到信号量
 217          **         OS_SEM_TMO:超时到
 218          **         OS_SEM_NOT_OK:没有得到信号量
 219          ** 全局变量: 无
 220          ** 调用模块: OS_TaskSuspend,OSSched,OS_ENTER_CRITICAL,OS_EXIT_CRITICAL
 221          **
 222          ** 作　者: 陈明计
 223          ** 日　期: 2002年9月1日
 224          **-------------------------------------------------------------------------------------------------------
 225          ** 修改人: 陈明计
 226          ** 日　期: 2002年10月20日
 227          ***-------------------------------------------------------------------------------------------------------
 228          ** 修改人: 陈明计
 229          ** 日　期: 2002年10月26日
 230          **-------------------------------------------------------------------------------------------------------
 231          ** 修改人:
 232          ** 日　期:
 233          **-------------------------------------------------------------------------------------------------------
 234          ********************************************************************************************************/
 235          #if EN_OS_SEM_ACCEPT > 0
                      uint8 OSSemAccept(uint8 Index)
              {
              #if EN_OS_SEM_CHK > 0
                  if (Index >= OS_MAX_SEMS)
                  {
C51 COMPILER V9.51   OS_SEM                                                                07/19/2013 23:42:42 PAGE 5   

                      return 0;
                  }
              #endif
              
                  OS_ENTER_CRITICAL();
                          /* 判断信号量是否有效。有效，信号量计数器减一 */
              #if OS_MAX_TASKS < 9
                  if (OsSemBuf[Index * 2] > 0)
                  {
                      OsSemBuf[Index * 2]--;
              #else
                  if (OsSemBuf[Index * 3] > 0)
                  {
                      OsSemBuf[Index * 3]--;
              #endif
                      OS_EXIT_CRITICAL();
                      return OS_SEM_OK;
                  }
                  else
                  {
                      /* 无信号返回信号无效 */
                      OS_EXIT_CRITICAL();
                      return OS_SEM_NOT_OK;
                  }
              }
              #endif
 267          
 268          
 269          /*********************************************************************************************************
 270          ** 函数名称: OSSemPost
 271          ** 功能描述: 中断中发送一个信号量
 272          ** 输　入: Index:信号量索引
 273          ** 输　出: NOT_OK:参数错误
 274          **         OS_SEM_OK:发送成功
 275          ** 全局变量: 无
 276          ** 调用模块: OSTaskResume,OS_ENTER_CRITICAL,OS_EXIT_CRITICAL
 277          **
 278          ** 作　者: 陈明计
 279          ** 日　期: 2003年8月3日
 280          **-------------------------------------------------------------------------------------------------------
 281          ** 修改人: 陈明计
 282          ** 日　期: 2002年10月26日
 283          **-------------------------------------------------------------------------------------------------------
 284          ** 修改人: 陈明计
 285          ** 日　期: 2002年12月30日
 286          **-------------------------------------------------------------------------------------------------------
 287          ** 修改人:
 288          ** 日　期:
 289          **-------------------------------------------------------------------------------------------------------
 290          ********************************************************************************************************/
 291          #if EN_OS_SEM_POST > 0
 292                  uint8 OSSemPost(uint8 Index)
 293          {
 294   1          uint8 temp,i;
 295   1      
 296   1      #if EN_OS_SEM_CHK > 0
                  if (Index >= OS_MAX_SEMS)
                  {
                      return NOT_OK;
                  }
              #endif
 302   1      
C51 COMPILER V9.51   OS_SEM                                                                07/19/2013 23:42:42 PAGE 6   

 303   1          OS_ENTER_CRITICAL();
 304   1      
 305   1      #if OS_MAX_TASKS < 9
 306   1              /* 信号量计数器加一 */
 307   1          if (OsSemBuf[Index * 2] <255)
 308   1          {
 309   2              OsSemBuf[Index * 2]++;
 310   2          }
 311   1              /* 察看信号量的等待任务队列 */
 312   1          temp = OsSemBuf[Index * 2 + 1];
 313   1          for (i = 0; i < OS_MAX_TASKS; i++)
 314   1          {
 315   2              if ((temp & 0x01) != 0)
 316   2              {
 317   3                  break;
 318   3              }
 319   2              temp = temp >> 1;
 320   2          }
 321   1              /* 有任务等待信号，使其中优先级最高的进入就绪状态，并将其从等待队列中清除 */
 322   1          if (i < OS_MAX_TASKS)
 323   1          {
 324   2              OsSemBuf[Index * 2 + 1] &= ~OSMapTbl[i];
 325   2              OSTaskResume(i);
 326   2          }
 327   1      #else
                      /* 信号量计数器加一 */
                  if (OsSemBuf[Index * 3] <255)
                  {
                      OsSemBuf[Index * 3]++;
                  }
              
                  temp = OsSemBuf[Index * 3 + 1];
                  for (i = 0; i < 8; i++)
                  {
                      if ((temp & 0x01) != 0)
                      {
                          break;
                      }
                      temp = temp >> 1;
                  }
                  if (i >= 8)
                  {
                      temp = OsSemBuf[Index * 3 + 2];
                      for ( ; i < OS_MAX_TASKS; i++)
                      {
                          if ((temp & 0x01) != 0)
                          {
                              break;
                          }
                          temp = temp >> 1;
                      }
                  }
                      /* 有任务等待信号，使其中优先级最高的进入就绪状态，并将其从等待队列中清除 */
                  if (i < OS_MAX_TASKS)
                  {
                      if (i < 8)
                      {
                          OsSemBuf[Index * 3 + 1] &= ~OSMapTbl[i];
                      }
                      else
                      {
                          OsSemBuf[Index * 3 + 2] &= ~OSMapTbl[i & 0x07];
C51 COMPILER V9.51   OS_SEM                                                                07/19/2013 23:42:42 PAGE 7   

                      }
                      OSTaskResume(i);
                  }
              #endif
 369   1          OS_EXIT_CRITICAL();
 370   1          return OS_SEM_OK;
 371   1      }
 372          #endif
 373          /*********************************************************************************************************
 374          ** 函数名称: OSSemQuery
 375          ** 功能描述: 查询信号量
 376          ** 输　入: Index:信号量索引
 377          ** 输　出: 信号量的值
 378          ** 全局变量: 无
 379          ** 调用模块: OS_ENTER_CRITICAL,OS_EXIT_CRITICAL
 380          **
 381          ** 作　者: 陈明计
 382          ** 日　期: 2002年9月1日
 383          **-------------------------------------------------------------------------------------------------------
 384          ** 修改人: 陈明计
 385          ** 日　期: 2002年10月26日
 386          **-------------------------------------------------------------------------------------------------------
 387          ** 修改人:
 388          ** 日　期:
 389          **-------------------------------------------------------------------------------------------------------
 390          ********************************************************************************************************/
 391          #if EN_OS_SEM_QUERY > 0
                      uint8 OSSemQuery(uint8 Index)
              {
                  if (Index >= OS_MAX_SEMS)
                  {
                      return 0;
                  }
              
              #if OS_MAX_TASKS < 9
                      return OsSemBuf[2*Index];
              #else
                      return OsSemBuf[3*Index];
              #endif
              }
              #endif
 406          
 407          #endif
 408          /*********************************************************************************************************
 409          **                            End Of File
 410          ********************************************************************************************************/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    233    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =      4    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
